apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
  namespace: integrador
data:
  rabbitmq.conf: |
    # permitir 'guest' desde remoto (no solo localhost)
    loopback_users.guest = false
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: integrador
spec:
  type: ClusterIP
  selector:
    app: rabbitmq
  ports:
    - name: amqp
      port: 5672
      targetPort: 5672


---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-ui
  namespace: integrador
spec:
  type: ClusterIP
  selector:
    app: rabbitmq
  ports:
    - name: http
      port: 15672
      targetPort: 15672
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: integrador
  labels: { app: rabbitmq }
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  replicas: 1
  selector:
    matchLabels: { app: rabbitmq }
  template:
    metadata:
      labels: { app: rabbitmq }
    spec:
      volumes:
        - name: rabbitmq-conf
          configMap:
            name: rabbitmq-config
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management
          ports:
            - containerPort: 5672
            - containerPort: 15672
          volumeMounts:
            - name: rabbitmq-conf
              mountPath: /etc/rabbitmq/rabbitmq.conf
              subPath: rabbitmq.conf
          resources:
            requests: { cpu: "50m",  memory: "128Mi" }
            limits:   {            memory: "512Mi" }
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rabbitmq-ui
  namespace: integrador
  annotations:
    kubernetes.io/ingress.class: "nginx"   # opcional
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /rabbitmq
            pathType: Prefix
            backend:
              service:
                name: rabbitmq-ui
                port:
                  number: 15672

