apiVersion: v1
kind: Service
metadata:
  name: coordinador-integrador
  namespace: integrador
spec:
  type: ClusterIP
  selector: { app: coordinator }
  ports:
    - port: 5000
      targetPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: coordinator
  namespace: integrador
spec:
  replicas: 1
  selector: { matchLabels: { app: coordinator } }
  template:
    metadata:
      labels: { app: coordinator }
    spec:
      # imagePullSecrets:
      #   - name: dockerhub-cred   # solo si tu repo en Docker Hub es PRIVADO
      containers:
        - name: coordinador
          image: docker.io/facundootero/coordinator:${IMAGE_TAG}
          imagePullPolicy: IfNotPresent
          workingDir: /app
          command: ["python"]
          args: ["-u","/app/coordinator.py"]
          env:
            - { name: RABBITMQ_HOST, value: rabbitmq }
            - { name: REDIS_HOST,    value: redis-integrador }
          ports: [{ containerPort: 5000 }]
          livenessProbe:
            httpGet: { path: /alive, port: 5000 }
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet: { path: /alive, port: 5000 }
            initialDelaySeconds: 5
            periodSeconds: 10
