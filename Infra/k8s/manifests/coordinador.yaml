apiVersion: apps/v1
kind: Deployment
metadata:
  name: coordinator
  namespace: integrador
  labels:
    app: coordinator
spec:
  replicas: 1
  revisionHistoryLimit: 2
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: coordinator
  template:
    metadata:
      labels:
        app: coordinator
    spec:
      serviceAccountName: coordinator-ksa
      containers:
        - name: coordinator           # ← opcional, pero mejor unificar
          image: docker.io/facundootero/coordinator:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          env:
            - name: RABBITMQ_HOST
              value: rabbitmq
            - name: REDIS_HOST
              value: redis-integrador
          livenessProbe:
            tcpSocket:
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "200m"
              memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: coordinador-integrador
  namespace: integrador
spec:
  type: ClusterIP                     # ← antes era LoadBalancer
  selector:
    app: coordinator                  # ← corrige el mismatch
  ports:
    - name: http
      port: 80
      targetPort: 5000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: coordinador
  namespace: integrador
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
    - host: coordinador.tu-dominio.com   # cámbialo o usa un host local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: coordinador-integrador
                port:
                  number: 80
