apiVersion: apps/v1
kind: Deployment
metadata:
  name: coordinator
  namespace: integrador
  labels:
    app: coordinator
spec:
  replicas: 1
  revisionHistoryLimit: 2
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: coordinator
  template:
    metadata:
      labels:
        app: coordinator
    spec:
      serviceAccountName: coordinator-ksa
      containers:
        - name: coordinator
          image: docker.io/facundootero/coordinator:contentv3
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 5000
          env:
            - name: RABBITMQ_HOST
              value: "rabbitmq"
            - name: RABBITMQ_PORT
              value: "5672"
            - name: RABBITMQ_VHOST
              value: "/"
            - name: RABBITMQ_USER
              value: "admin"
            - name: RABBITMQ_PASS
              value: "admin1234!"

  # (Eliminar RABBIT_HOST/PORT/VHOST/USER/PASS si existen)

            - name: REDIS_HOST
              value: redis-integrador
          startupProbe:
            httpGet:
              path: /alive
              port: 5000
            periodSeconds: 5
            failureThreshold: 30     # ~150s para arrancar todo
          livenessProbe:
            httpGet:
              path: /alive
              port: 5000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /status
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 12   
          resources:
            requests: { cpu: "100m", memory: "128Mi" }
            limits:   { cpu: "200m", memory: "256Mi" }
---
apiVersion: v1
kind: Service
metadata:
  name: coordinador-integrador
  namespace: integrador
spec:
  type: ClusterIP
  selector:
    app: coordinator
  ports:
    - name: http
      port: 80
      targetPort: 5000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: coordinador
  namespace: integrador
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: coordinador-integrador
                port:
                  number: 80
