#!/bin/bash
set -euxo pipefail

LOG="/var/log/startup-worker-cpu.log"
exec > >(tee -a "$LOG") 2>&1

retry() { n=0; max=$${2:-5}; delay=$${3:-6}; until bash -lc "$1"; do n=$((n+1)); [ "$n" -ge "$max" ] && { echo "Fallo: $1"; return 1; }; echo "retry $n/$max: $1"; sleep "$delay"; done; }

# 1) Instalar Docker si no está
if ! command -v docker >/dev/null 2>&1; then
  export DEBIAN_FRONTEND=noninteractive
  retry "apt-get update -y" 5 8
  retry "apt-get install -y ca-certificates curl gnupg lsb-release" 5 8
  install -m 0755 -d /etc/apt/keyrings
  curl -fsSL https://download.docker.com/linux/$(. /etc/os-release && echo "$ID")/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  chmod a+r /etc/apt/keyrings/docker.gpg
  echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/$(. /etc/os-release && echo "$ID") $(. /etc/os-release && echo "$VERSION_CODENAME") stable" > /etc/apt/sources.list.d/docker.list
  retry "apt-get update -y" 5 8
  
if ! retry "apt-get install -y docker-ce docker-ce-cli containerd.io" 3 10; then
    retry "apt-get install -y docker.io" 3 10
  fi
fi
# Agregar usuarios comunes al grupo docker (si existen)
if id -u ubuntu >/dev/null 2>&1; then
  usermod -aG docker ubuntu || true
fi

# Intentar agregar miembros de google-sudoers (cuando ya estén creados)
if getent group google-sudoers >/dev/null; then
  for u in $(getent group google-sudoers | awk -F: '{print $4}' | tr , ' '); do
    [ -n "$u" ] && usermod -aG docker "$u" || true
  done
fi
# Habilitar y arrancar docker y esperar que responda
systemctl daemon-reload || true
systemctl enable docker || true
systemctl start docker || true
for i in {1..20}; do docker info >/dev/null 2>&1 && break; echo "docker no listo; reintentando..."; systemctl restart docker || true; sleep 3; done

# 2) .env del worker
install -d -m 0755 /opt/worker-cpu
cat > /opt/worker-cpu/.env <<'EOF'
%{ for k, v in worker_env ~}
${k}=${v}
%{ endfor ~}
WORKER_ID=$${HOSTNAME}
EOF

# 3) Ejecutar contenedor
IMAGE="${worker_image}"
docker rm -f worker-cpu || true
docker run -d --name worker-cpu \
  --restart unless-stopped \
  --env-file /opt/worker-cpu/.env \
  "$IMAGE" \
  > /var/log/worker-cpu.container 2>&1

# 4) Log continuo (una sola vez)
pgrep -f "docker logs -f worker-cpu" >/dev/null || (docker logs -f worker-cpu >> /var/log/worker-cpu.log 2>&1 &)
